{
	"AWSTemplateFormatVersion": "2010-09-09",

	"Description": "TTND AWS CloudFormation template to launch first instance",

	"Parameters": {
		"KeyName": {
			"Description": "EC2 Key Pair for SSH Access",
			"Type" : "AWS::EC2::KeyPair::KeyName",
			"Default": "sample",
			"MinLength": "1",
			"MaxLength": "64",
			"AllowedPattern": "[-_ a-zA-Z0-9]*",
			"ConstraintDescription": "can contain only alphanumeric characters, spaces, dashes and underscores."
		},

		"InstanceType": {
			"Description": "Instance1 EC2 instance type",
			"Type": "String",
			"Default": "t2.micro",
			"AllowedValues": ["t2.micro","t2.nano", "m1.small", "m1.medium", "m1.large", "m1.xlarge", "m2.xlarge", "m2.2xlarge", "m2.4xlarge", "m3.medium", "m3.xlarge", "c4.xlarge", "c4.4xlarge", "m3.2xlarge", "c1.medium", "c1.xlarge", "cc1.4xlarge", "c4.large", "cc2.8xlarge", "cg1.4xlarge"],
			"ConstraintDescription" : "must be a valid EC2 instance type."

		}
},
		"Mappings": {
			"AWSInstanceType2Arch": {
				"t2.micro": {
					"Arch": "64"
				},
				"t2.small": {
					"Arch": "64"
				},
				"t2.medium": {
					"Arch": "64"
				},
				"t2.large": {
					"Arch": "64"
				},
				"m3.medium": {
					"Arch": "64"
				},
				"m4.large": {
					"Arch": "64"
				},
				"m4.xlarge": {
					"Arch": "64"
				},
				"m4.2xlarge": {
					"Arch": "64"
				}
			},

			"InstanceAMI": {
				"ap-south-1": {
					"64": "ami-d5c18eba"
				}
			}
},

			"Resources": {
				"VPC": {
					"Type": "AWS::EC2::VPC",
					"Properties": {
						"CidrBlock": "10.0.0.0/16",
						"Tags": [{
							"Key": "Application",
							"Value": {
								"Ref": "AWS::StackId"
							}
						}, {
							"Key": "Name",
							"Value": "Project_VPC"
						}, {
							"Key": "Network",
							"Value": "Public"
						}]
					}
				},
				"PublicSubnet1": {
					"Type": "AWS::EC2::Subnet",
					"Properties": {
						"VpcId": {
							"Ref": "VPC"
						},
						"CidrBlock": "10.0.0.0/24",
						"Tags": [{
							"Key": "Application",
							"Value": {
								"Ref": "AWS::StackId"
							}
						}, {
							"Key": "Network",
							"Value": "Public"
						}, {
							"Key": "Name",
							"Value": "Project_Public_Subnet"
						}]
					}
				},
				"InternetGateway": {
					"Type": "AWS::EC2::InternetGateway",
					"Properties": {
						"Tags": [{
							"Key": "Application",
							"Value": {
								"Ref": "AWS::StackId"
							}
						}, {
							"Key": "Network",
							"Value": "Public"
						}, {
							"Key": "Name",
							"Value": "Project_Internetgateway"
						}]
					}
				},
				"AttachGateway": {
					"Type": "AWS::EC2::VPCGatewayAttachment",
					"Properties": {
						"VpcId": {
							"Ref": "VPC"
						},
						"InternetGatewayId": {
							"Ref": "InternetGateway"
						}
					}
				},

				"PublicRouteTable": {
					"Type": "AWS::EC2::RouteTable",
					"Properties": {
						"VpcId": {
							"Ref": "VPC"
						},
						"Tags": [{
							"Key": "Application",
							"Value": {
								"Ref": "AWS::StackId"
							}
						}, {
							"Key": "Network",
							"Value": "Public"
						}, {
							"Key": "Name",
							"Value": "cloudwords_public_routetable"
						}]
					}
				},
				"PublicRoute": {
					"Type": "AWS::EC2::Route",
					"DependsOn": "AttachGateway",
					"Properties": {
						"RouteTableId": {
							"Ref": "PublicRouteTable"
						},
						"DestinationCidrBlock": "0.0.0.0/0",
						"GatewayId": {
							"Ref": "InternetGateway"
						}
					}
				},
				"PublicSubnetRouteTableAssociation": {
					"Type": "AWS::EC2::SubnetRouteTableAssociation",
					"Properties": {
						"SubnetId": {
							"Ref": "PublicSubnet"
						},
						"RouteTableId": {
							"Ref": "PublicRouteTable"
						}
					}
				},
				"PublicNetworkAcl": {
					"Type": "AWS::EC2::NetworkAcl",
					"Properties": {
						"VpcId": {
							"Ref": "VPC"
						},
						"Tags": [{
							"Key": "Application",
							"Value": {
								"Ref": "AWS::StackId"
							}
						}, {
							"Key": "Network",
							"Value": "Public"
						}, {
							"Key": "Name",
							"Value": "cloudwords_publicNetworkacl"
						}]
					}
				},
				"InboundHTTPPublicNetworkAclEntry": {
					"Type": "AWS::EC2::NetworkAclEntry",
					"Properties": {
						"NetworkAclId": {
							"Ref": "PublicNetworkAcl"
						},
						"RuleNumber": "100",
						"Protocol": "6",
						"RuleAction": "allow",
						"Egress": "false",
						"CidrBlock": "0.0.0.0/0",
						"PortRange": {
							"From": "0",
							"To": "65535"
						}
					}
				},
				"InboundDynamicPortsPublicNetworkAclEntry": {
					"Type": "AWS::EC2::NetworkAclEntry",
					"Properties": {
						"NetworkAclId": {
							"Ref": "PublicNetworkAcl"
						},
						"RuleNumber": "101",
						"Protocol": "6",
						"RuleAction": "allow",
						"Egress": "false",
						"CidrBlock": "0.0.0.0/0",
						"PortRange": {
							"From": "1024",
							"To": "65535"
						},
						"PortRange": {
							"From": "22",
							"To": "22"
						}
					}
				},
				"OutboundHTTPPublicNetworkAclEntry": {
					"Type": "AWS::EC2::NetworkAclEntry",
					"Properties": {
						"NetworkAclId": {
							"Ref": "PublicNetworkAcl"
						},
						"RuleNumber": "100",
						"Protocol": "6",
						"RuleAction": "allow",
						"Egress": "true",
						"CidrBlock": "0.0.0.0/0",
						"PortRange": {
							"From": "80",
							"To": "80"
						},
						"PortRange": {
							"From": "22",
							"To": "22"
						}
					}
				},
				"OutBoundDynamicPortPublicNetworkAclEntry": {
					"Type": "AWS::EC2::NetworkAclEntry",
					"Properties": {
						"NetworkAclId": {
							"Ref": "PublicNetworkAcl"
						},
						"RuleNumber": "101",
						"Protocol": "6",
						"RuleAction": "allow",
						"Egress": "true",
						"CidrBlock": "0.0.0.0/0",
						"PortRange": {
							"From": "1024",
							"To": "65535"
						}
					}
				},
				"PublicSubnetNetworkAclAssociation": {
					"Type": "AWS::EC2::SubnetNetworkAclAssociation",
					"Properties": {
						"SubnetId": {
							"Ref": "PublicSubnet"
						},
						"NetworkAclId": {
							"Ref": "PublicNetworkAcl"
						}
					}
				},

				"InstanceSecurityGroup": {
					"Type": "AWS::EC2::SecurityGroup",
					"Properties": {
						"GroupDescription": "Enable HTTP access",
						"VpcId": {
							"Ref": "VPC"
						},
						"SecurityGroupIngress": [{
							"IpProtocol": "tcp",
							"FromPort": "22",
							"ToPort": "22",
							"CidrIp": "0.0.0.0/0"
						}, {
							"IpProtocol": "tcp",
							"FromPort": "80",
							"ToPort": "80",
							"CidrIp": "0.0.0.0/0"
						}],
						"Tags": [{
							"Key": "Name",
							"Value": "Project_EC2_sg"
						}]
					}
				},
				"Instance": {
					"Type": "AWS::EC2::Instance",
					"Properties": {
						"KeyName": {
							"Ref": "KeyName"
						},
						"InstanceType": {
							"Ref": "InstanceType"
						},
						"ImageId": {
							"Fn::FindInMap": ["InstanceAMI", {
								"Ref": "AWS::Region"
							}, {
								"Fn::FindInMap": ["AWSInstanceType2Arch", {
									"Ref": "InstanceType"
								}, "Arch"]
							}]
						},
						"NetworkInterfaces": [{
							"DeviceIndex": "0",
							"AssociatePublicIpAddress": "true",
							"DeleteOnTermination": "true",
							"SubnetId": {
								"Ref": "PublicSubnet"
							},
							"GroupSet": [{
								"Ref": "InstanceSecurityGroup"
							}]
						}],
						"Tags": [{
							"Key": "Name",
							"Value": "Project_Instance"
						}],
						"UserData": {
							"Fn::Base64": {
								"Fn::Join": ["", ["#!/bin/bash -ex\n", "apt-get update"]]
							}
						}
					}
				}

},
			
		


		"Outputs": {
			"InstanceId": {
				"Description": "InstanceId of the newly created Mysql instance",
				"Value": {
					"Ref": "Instance"
				}
			},

			"WebUrl": {
				"Description": "This is the endpoint of application.",
				"Value": {
					"Fn::Join": ["", ["https://", {
						"Fn::GetAtt": ["Instance", "PublicIp"]
					}, ":8444"]]
				}
			}
		}
	}



